package pharmacarerene;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class WritePrescription extends javax.swing.JFrame {

    // Define table model
    DefaultTableModel dtm = new DefaultTableModel();
    
    // Define date format
    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
    Date date = new Date();
    
    
    
    
    public WritePrescription() {
        initComponents();
        
        // Call Function to populate combobox
    jComboBoxDrugNameFill();
            try {
            // Set date
            txtDate.setText(formatter.format(date));
            txtStartDate.setText(formatter.format(date));
            txtEndDate.setText(formatter.format(date));
        
            // Set column identifiers for table
            dtm.setColumnIdentifiers(new Object[] {"Drug name", "Dose", "Frequency", "Start date", "End date", "Status"});
            jTable.setModel(dtm);
            } catch(Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblPrescriptionId = new javax.swing.JLabel();
        txtPrescriptionId = new javax.swing.JTextField();
        lblPatientId = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        lblDoctorId = new javax.swing.JLabel();
        txtDoctorId = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblPatientType = new javax.swing.JLabel();
        txtPatientType = new javax.swing.JTextField();
        jComboBoxDrugName = new javax.swing.JComboBox<>();
        lblDrugName = new javax.swing.JLabel();
        lblDose = new javax.swing.JLabel();
        txtDose = new javax.swing.JTextField();
        lblFrequency = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        lblEndDate = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        chkBoxActive = new javax.swing.JCheckBox();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButtonModify = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jButtonCheckCocktail = new javax.swing.JButton();
        jButtonSubmit = new javax.swing.JButton();
        btnCheckDoctorId = new javax.swing.JButton();
        txtFrequency = new javax.swing.JTextField();
        btnCheckPatientId = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblPrescriptionId.setText("Prescription ID");

        txtPrescriptionId.setEditable(false);

        lblPatientId.setText("Patient ID");

        txtPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientIdActionPerformed(evt);
            }
        });

        lblDoctorId.setText("Doctor ID");

        txtDoctorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorIdActionPerformed(evt);
            }
        });

        lblDate.setText("Date");

        txtDate.setEditable(false);
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        lblPatientName.setText("Patient Name");

        txtPatientName.setEditable(false);

        lblDoctorName.setText("Doctor Name");

        txtDoctorName.setEditable(false);

        lblPatientType.setText("Patient Type");

        txtPatientType.setEditable(false);

        jComboBoxDrugName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDrugNameActionPerformed(evt);
            }
        });

        lblDrugName.setText("Drug Name");

        lblDose.setText("Dose");

        lblFrequency.setText("Frequency");

        lblStartDate.setText("Start Date");

        lblEndDate.setText("End Date");

        chkBoxActive.setText("Active");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane.setViewportView(jTable);

        jButtonModify.setText("Modify Line");
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete Line");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonAdd.setText("Add Line");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jButtonCheckCocktail.setText("Check Cocktail");

        jButtonSubmit.setText("Submit");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        btnCheckDoctorId.setText("Check");
        btnCheckDoctorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckDoctorIdActionPerformed(evt);
            }
        });

        btnCheckPatientId.setText("Check");
        btnCheckPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckPatientIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAdd)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonModify)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDelete))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonExit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCheckCocktail)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSubmit))
                            .addComponent(jScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPrescriptionId)
                                    .addComponent(lblPatientId))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPrescriptionId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 415, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPatientType)
                                        .addGap(24, 24, 24)
                                        .addComponent(txtPatientType, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblPatientName)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblDate)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDrugName)
                                            .addComponent(jComboBoxDrugName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(59, 59, 59)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDose, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblDose, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblFrequency)
                                            .addComponent(txtFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(62, 62, 62)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                            .addComponent(lblStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(46, 46, 46)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                            .addComponent(lblEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnCheckPatientId)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblDoctorId)
                                                .addGap(50, 50, 50)
                                                .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(50, 50, 50)
                                                .addComponent(btnCheckDoctorId)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblDoctorName)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkBoxActive))))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFrequency)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrescriptionId)
                            .addComponent(txtPrescriptionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDate)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientId)
                            .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPatientName)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCheckPatientId))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientType)
                            .addComponent(txtPatientType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDoctorName)
                            .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDoctorId)
                            .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCheckDoctorId))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDrugName)
                            .addComponent(lblDose))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxDrugName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblStartDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEndDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBoxActive))))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModify)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCheckCocktail)
                    .addComponent(jButtonSubmit)
                    .addComponent(jButtonExit))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        
        boolean isSelected = jTable.getSelectionModel().isSelectionEmpty();
        System.out.println(isSelected);
        
        int row = jTable.getSelectedRow();
        int column = jTable.getSelectedColumn();
        
        if (isSelected == true) {
            
            row = Integer.parseInt(JOptionPane.showInputDialog("Choose a row to edit (the count starts at 0)"));
            column = Integer.parseInt(JOptionPane.showInputDialog("Choose a column to edit (don't forget it starts at 0)"));
            
        } 
        
        if (column == 0) {

                 String drugName = JOptionPane.showInputDialog("Enter the drug name");
                 jTable.getModel().setValueAt(drugName, row, column);

            } else if (column == 1) {

                String dose = JOptionPane.showInputDialog("Enter the correct dose");
                jTable.getModel().setValueAt(dose, row, column);

            } else if (column == 2) {

                String[] options = {"Once a day", "Twice a day", "Three times a day", "Once a week", "Twice a week", "Three times a week", "Other"}; 
                String frequency = (String)JOptionPane.showInputDialog(null, "Enter the correct frequency", null, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                jTable.getModel().setValueAt(frequency, row, column);

            } else if (column == 3) {

                String startDate = JOptionPane.showInputDialog("Enter the correct start date");
                jTable.getModel().setValueAt(startDate, row, column);
                
                // to operate the cancel button at "edit" JOptionPane, you need to have the values stored in a database so you can retrieve them

            } else if (column == 4) {

                String endDate = JOptionPane.showInputDialog("Enter the correct end date");
                jTable.getModel().setValueAt(endDate, row, column);

            } else if (column == 5) {

                String status = (String) jTable.getValueAt(row, column);

                if (status == "Active") {
                    jTable.setValueAt("Not active", row, column);
                } else {
                    jTable.setValueAt("Active", row, column);
                }
            }

            jTable.clearSelection();
            System.out.println(isSelected);
        
    }//GEN-LAST:event_jButtonModifyActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        
        String drugName = jComboBoxDrugName.getSelectedItem().toString();
        String dose = txtDose.getText();
        String frequency = txtFrequency.getText();
        String startDate = txtStartDate.getText();
        String endDate = txtEndDate.getText();
        boolean status = chkBoxActive.isSelected();
        String isActive;
        
        if (status == true) {
            isActive = "Active";
        } else {
            isActive = "Not active";
        }
        
        dtm.addRow(new Object[] {
                    drugName, dose, frequency, startDate, endDate, isActive});
        
//        jComboBoxDrugName.setSelectedItem(null);
//        jComboBoxFrequency.setSelectedItem(null);
        txtDose.setText(null);
        chkBoxActive.setSelected(false);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int selectedRow = jTable.getSelectedRow();
        dtm.removeRow(selectedRow);
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void txtPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientIdActionPerformed
        
    }//GEN-LAST:event_txtPatientIdActionPerformed

    private void txtDoctorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorIdActionPerformed

    }//GEN-LAST:event_txtDoctorIdActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        
        //Set variables getText from form
        int idPatient = Integer.parseInt(txtPatientId.getText());
        int idDoctor = Integer.parseInt(txtDoctorId.getText());
        String patientName = txtPatientName.getText();
        String doctorName = txtDoctorName.getText();
        
        String patientTypeString = txtPatientType.getText();
        int patientType = 0;       
        
//        if(patientTypeString == "Indoor") {
//            patientType = 1;
//        }else{
//            patientType = 2;
//        }
        
        
        //Set variables getText from table
        //TODO: itarate/for loop through all row/column indexes / create array/object to store data
        String drugName = (String) jTable.getModel().getValueAt(0, 0);
        String dose = (String) jTable.getModel().getValueAt(0, 1);
        String frequency = (String) jTable.getModel().getValueAt(0, 2);
        String dateStart =  (String) jTable.getModel().getValueAt(0, 3);
//        Date dateEnd = (Date) jTable.getModel().getValueAt(0, 4);
//        Date dateStartFormatted = formatter.format(dateStart);
//        dateStart(formatter.format(date));
//        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        Date dateStartFormatted = null;
//        try {
//            dateStartFormatted = format.parse(dateStart);
//        } catch (ParseException ex) {
//            Logger.getLogger(WritePrescription.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        System.out.println(dateStartFormatted);

        System.out.println(dateStart);
        
        try{            
            //Mysql insert statement
            String sql = "INSERT INTO PRESCRIPTION (iddoctor, idpatient, doctor_name, patient_name, patient_type, drug_name, dose, frequency, start_date, end_date, active, date)" 
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            
            // Connection
            Connection db = DButils.getConnection();            
             
            // Create the mysql insert preparedstatement & return generated ID
            PreparedStatement ps = db.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            
            ps.setInt (1, idDoctor);
            ps.setInt (2, idPatient);
            ps.setString (3, doctorName);
            ps.setString (4, patientName);
            ps.setInt (5, patientType);
            ps.setString (6, drugName);
            ps.setString (7, dose);
            ps.setString (8, frequency);
            ps.setDate (9, null);
            ps.setDate (10, null);
            ps.setInt (11, 1);
            ps.setDate (12, null);
            
            // Execute the preparedstatement
            ps.executeUpdate();
             
            //Get Prescription ID
            //Initialize variable. long alternative?
            int idPrescription = 0;
            
            ResultSet rs = ps.getGeneratedKeys();

            if (rs.next()) {
                idPrescription = rs.getInt(1);
            }
            
            //Set Prescription ID to text-field
            txtPrescriptionId.setText(String.valueOf(idPrescription));
            System.out.println(patientTypeString);

            ps.close();
             
           }
           catch (Exception e)
           {
             System.err.println("Got an exception!");
             System.err.println(e.getMessage());
           } 

    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void btnCheckDoctorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckDoctorIdActionPerformed
        
        int idDoctor = Integer.parseInt(txtDoctorId.getText());
        
         try{
            String sql = "SELECT DISTINCT FIRST_NAME, LAST_NAME FROM DOCTOR WHERE IDDOCTOR = " + idDoctor;
            System.out.println(sql);
            Connection db = DButils.getConnection();
            PreparedStatement ps = db.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next()) {
                String firstName = rs.getString("FIRST_NAME");
                String lastName = rs.getString("LAST_NAME");

                txtDoctorName.setText(firstName + " " + lastName);
            } else {
                txtDoctorName.setText("Not found!");
            }
            
        }catch(Exception e){
            txtDoctorName.setText("Not found!");
            System.out.println(e);
        }  
    }//GEN-LAST:event_btnCheckDoctorIdActionPerformed

    private void jComboBoxDrugNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDrugNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDrugNameActionPerformed

    private void btnCheckPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckPatientIdActionPerformed
        
        int idPatient = Integer.parseInt(txtPatientId.getText());
        System.out.println(idPatient);
        
         try{
            String sql = "SELECT DISTINCT FIRST_NAME, LAST_NAME, TYPE FROM PATIENT WHERE IDPATIENT = " + idPatient;
            System.out.println(sql);
            Connection db = DButils.getConnection();
            PreparedStatement ps = db.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next()) {
                String firstName = rs.getString("FIRST_NAME");
                String lastName = rs.getString("LAST_NAME");
                int type = rs.getInt("TYPE");
                
                txtPatientName.setText(firstName + " " + lastName);
                
                if(type == 1) {
                    txtPatientType.setText("Indoor");
                } else {
                    txtPatientType.setText("Outdoor");
                }
                
            } else {
                txtPatientName.setText("Not found!");
                txtPatientType.setText("Not found!");
            }
            
        }catch(Exception e){
            txtPatientName.setText("Not found!");
            System.out.println(e);
        } 
    }//GEN-LAST:event_btnCheckPatientIdActionPerformed

    private void jComboBoxDrugNameFill() {                                                  
       
        //TODO: Make separate class?
        try{
            String sql ="SELECT NAME FROM DRUGS";
            Connection db = DButils.getConnection();
            PreparedStatement ps = db.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()) {
                String name = rs.getString("name");
                jComboBoxDrugName.addItem(name);
            }
            
        }catch(Exception e){
            System.out.println(e);
        }
        
    }                                                 

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WritePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WritePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WritePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WritePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WritePrescription().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckDoctorId;
    private javax.swing.JButton btnCheckPatientId;
    private javax.swing.JCheckBox chkBoxActive;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCheckCocktail;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JComboBox<String> jComboBoxDrugName;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDoctorId;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblDose;
    private javax.swing.JLabel lblDrugName;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblFrequency;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientType;
    private javax.swing.JLabel lblPrescriptionId;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDoctorId;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDose;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtFrequency;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientType;
    private javax.swing.JTextField txtPrescriptionId;
    private javax.swing.JTextField txtStartDate;
    // End of variables declaration//GEN-END:variables
}
